server:
  port: 8080

spring:
  application:
    name: gateway
  security:
    jwt:
      secret:
        key: a0fcbd306a451411520fb5e92f976a38fb5f587cde0b2b7894b9e120c84059baaad36ec8ec3d2bd5efc0aa021735ca631e04efdf0235b1b2a99ecfc44e87608f
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - 'http://localhost:3000'
              - 'https://urbanclamp.xyz'
              - 'https://www.urbanclamp.xyz'
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/users/**, /api/roles/**, /api/addresses/**, /user-service/metrics
          filters:
            - name: AuthenticationFilter
              args:
                requiredRole: ROLE_USER
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/api/auth/**, /auth-service/metrics
        - id: partner-service
          uri: lb://partner-service
          predicates:
            - Path=/api/partners/**, /api/categories/**, /api/services/**, /api/availabilities/**, /partner-service/metrics
        - id: booking-service
          uri: lb://booking-service
          predicates:
            - Path=/api/bookings/**, /booking-service/metrics, /booking-service/actuator
        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/api/payments/**
        - id: email-service
          uri: lb://email-service
          predicates:
              - Path=/api/emails/**
          filters:
              - StripPrefix=2
        - id: review-service
          uri: lb://review-service
          predicates:
            - Path=/api/reviews/**

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

logging:
  level:
    org:
      springframework:
        cloud:
          gateway: TRACE

management:
  endpoints:
    web:
      exposure:
        include: "health,metrics,prometheus"
  metrics:
    export:
      prometheus:
        enabled: true